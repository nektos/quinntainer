import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { CloudFormationClient } from "./CloudFormationClient";
import { ActivateTypeCommandInput, ActivateTypeCommandOutput } from "./commands/ActivateTypeCommand";
import { BatchDescribeTypeConfigurationsCommandInput, BatchDescribeTypeConfigurationsCommandOutput } from "./commands/BatchDescribeTypeConfigurationsCommand";
import { CancelUpdateStackCommandInput, CancelUpdateStackCommandOutput } from "./commands/CancelUpdateStackCommand";
import { ContinueUpdateRollbackCommandInput, ContinueUpdateRollbackCommandOutput } from "./commands/ContinueUpdateRollbackCommand";
import { CreateChangeSetCommandInput, CreateChangeSetCommandOutput } from "./commands/CreateChangeSetCommand";
import { CreateStackCommandInput, CreateStackCommandOutput } from "./commands/CreateStackCommand";
import { CreateStackInstancesCommandInput, CreateStackInstancesCommandOutput } from "./commands/CreateStackInstancesCommand";
import { CreateStackSetCommandInput, CreateStackSetCommandOutput } from "./commands/CreateStackSetCommand";
import { DeactivateTypeCommandInput, DeactivateTypeCommandOutput } from "./commands/DeactivateTypeCommand";
import { DeleteChangeSetCommandInput, DeleteChangeSetCommandOutput } from "./commands/DeleteChangeSetCommand";
import { DeleteStackCommandInput, DeleteStackCommandOutput } from "./commands/DeleteStackCommand";
import { DeleteStackInstancesCommandInput, DeleteStackInstancesCommandOutput } from "./commands/DeleteStackInstancesCommand";
import { DeleteStackSetCommandInput, DeleteStackSetCommandOutput } from "./commands/DeleteStackSetCommand";
import { DeregisterTypeCommandInput, DeregisterTypeCommandOutput } from "./commands/DeregisterTypeCommand";
import { DescribeAccountLimitsCommandInput, DescribeAccountLimitsCommandOutput } from "./commands/DescribeAccountLimitsCommand";
import { DescribeChangeSetCommandInput, DescribeChangeSetCommandOutput } from "./commands/DescribeChangeSetCommand";
import { DescribeChangeSetHooksCommandInput, DescribeChangeSetHooksCommandOutput } from "./commands/DescribeChangeSetHooksCommand";
import { DescribePublisherCommandInput, DescribePublisherCommandOutput } from "./commands/DescribePublisherCommand";
import { DescribeStackDriftDetectionStatusCommandInput, DescribeStackDriftDetectionStatusCommandOutput } from "./commands/DescribeStackDriftDetectionStatusCommand";
import { DescribeStackEventsCommandInput, DescribeStackEventsCommandOutput } from "./commands/DescribeStackEventsCommand";
import { DescribeStackInstanceCommandInput, DescribeStackInstanceCommandOutput } from "./commands/DescribeStackInstanceCommand";
import { DescribeStackResourceCommandInput, DescribeStackResourceCommandOutput } from "./commands/DescribeStackResourceCommand";
import { DescribeStackResourceDriftsCommandInput, DescribeStackResourceDriftsCommandOutput } from "./commands/DescribeStackResourceDriftsCommand";
import { DescribeStackResourcesCommandInput, DescribeStackResourcesCommandOutput } from "./commands/DescribeStackResourcesCommand";
import { DescribeStacksCommandInput, DescribeStacksCommandOutput } from "./commands/DescribeStacksCommand";
import { DescribeStackSetCommandInput, DescribeStackSetCommandOutput } from "./commands/DescribeStackSetCommand";
import { DescribeStackSetOperationCommandInput, DescribeStackSetOperationCommandOutput } from "./commands/DescribeStackSetOperationCommand";
import { DescribeTypeCommandInput, DescribeTypeCommandOutput } from "./commands/DescribeTypeCommand";
import { DescribeTypeRegistrationCommandInput, DescribeTypeRegistrationCommandOutput } from "./commands/DescribeTypeRegistrationCommand";
import { DetectStackDriftCommandInput, DetectStackDriftCommandOutput } from "./commands/DetectStackDriftCommand";
import { DetectStackResourceDriftCommandInput, DetectStackResourceDriftCommandOutput } from "./commands/DetectStackResourceDriftCommand";
import { DetectStackSetDriftCommandInput, DetectStackSetDriftCommandOutput } from "./commands/DetectStackSetDriftCommand";
import { EstimateTemplateCostCommandInput, EstimateTemplateCostCommandOutput } from "./commands/EstimateTemplateCostCommand";
import { ExecuteChangeSetCommandInput, ExecuteChangeSetCommandOutput } from "./commands/ExecuteChangeSetCommand";
import { GetStackPolicyCommandInput, GetStackPolicyCommandOutput } from "./commands/GetStackPolicyCommand";
import { GetTemplateCommandInput, GetTemplateCommandOutput } from "./commands/GetTemplateCommand";
import { GetTemplateSummaryCommandInput, GetTemplateSummaryCommandOutput } from "./commands/GetTemplateSummaryCommand";
import { ImportStacksToStackSetCommandInput, ImportStacksToStackSetCommandOutput } from "./commands/ImportStacksToStackSetCommand";
import { ListChangeSetsCommandInput, ListChangeSetsCommandOutput } from "./commands/ListChangeSetsCommand";
import { ListExportsCommandInput, ListExportsCommandOutput } from "./commands/ListExportsCommand";
import { ListImportsCommandInput, ListImportsCommandOutput } from "./commands/ListImportsCommand";
import { ListStackInstancesCommandInput, ListStackInstancesCommandOutput } from "./commands/ListStackInstancesCommand";
import { ListStackResourcesCommandInput, ListStackResourcesCommandOutput } from "./commands/ListStackResourcesCommand";
import { ListStacksCommandInput, ListStacksCommandOutput } from "./commands/ListStacksCommand";
import { ListStackSetOperationResultsCommandInput, ListStackSetOperationResultsCommandOutput } from "./commands/ListStackSetOperationResultsCommand";
import { ListStackSetOperationsCommandInput, ListStackSetOperationsCommandOutput } from "./commands/ListStackSetOperationsCommand";
import { ListStackSetsCommandInput, ListStackSetsCommandOutput } from "./commands/ListStackSetsCommand";
import { ListTypeRegistrationsCommandInput, ListTypeRegistrationsCommandOutput } from "./commands/ListTypeRegistrationsCommand";
import { ListTypesCommandInput, ListTypesCommandOutput } from "./commands/ListTypesCommand";
import { ListTypeVersionsCommandInput, ListTypeVersionsCommandOutput } from "./commands/ListTypeVersionsCommand";
import { PublishTypeCommandInput, PublishTypeCommandOutput } from "./commands/PublishTypeCommand";
import { RecordHandlerProgressCommandInput, RecordHandlerProgressCommandOutput } from "./commands/RecordHandlerProgressCommand";
import { RegisterPublisherCommandInput, RegisterPublisherCommandOutput } from "./commands/RegisterPublisherCommand";
import { RegisterTypeCommandInput, RegisterTypeCommandOutput } from "./commands/RegisterTypeCommand";
import { RollbackStackCommandInput, RollbackStackCommandOutput } from "./commands/RollbackStackCommand";
import { SetStackPolicyCommandInput, SetStackPolicyCommandOutput } from "./commands/SetStackPolicyCommand";
import { SetTypeConfigurationCommandInput, SetTypeConfigurationCommandOutput } from "./commands/SetTypeConfigurationCommand";
import { SetTypeDefaultVersionCommandInput, SetTypeDefaultVersionCommandOutput } from "./commands/SetTypeDefaultVersionCommand";
import { SignalResourceCommandInput, SignalResourceCommandOutput } from "./commands/SignalResourceCommand";
import { StopStackSetOperationCommandInput, StopStackSetOperationCommandOutput } from "./commands/StopStackSetOperationCommand";
import { TestTypeCommandInput, TestTypeCommandOutput } from "./commands/TestTypeCommand";
import { UpdateStackCommandInput, UpdateStackCommandOutput } from "./commands/UpdateStackCommand";
import { UpdateStackInstancesCommandInput, UpdateStackInstancesCommandOutput } from "./commands/UpdateStackInstancesCommand";
import { UpdateStackSetCommandInput, UpdateStackSetCommandOutput } from "./commands/UpdateStackSetCommand";
import { UpdateTerminationProtectionCommandInput, UpdateTerminationProtectionCommandOutput } from "./commands/UpdateTerminationProtectionCommand";
import { ValidateTemplateCommandInput, ValidateTemplateCommandOutput } from "./commands/ValidateTemplateCommand";

export declare class CloudFormation extends CloudFormationClient {
    
    activateType(args: ActivateTypeCommandInput, options?: __HttpHandlerOptions): Promise<ActivateTypeCommandOutput>;
    activateType(args: ActivateTypeCommandInput, cb: (err: any, data?: ActivateTypeCommandOutput) => void): void;
    activateType(args: ActivateTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ActivateTypeCommandOutput) => void): void;
    
    batchDescribeTypeConfigurations(args: BatchDescribeTypeConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<BatchDescribeTypeConfigurationsCommandOutput>;
    batchDescribeTypeConfigurations(args: BatchDescribeTypeConfigurationsCommandInput, cb: (err: any, data?: BatchDescribeTypeConfigurationsCommandOutput) => void): void;
    batchDescribeTypeConfigurations(args: BatchDescribeTypeConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDescribeTypeConfigurationsCommandOutput) => void): void;
    
    cancelUpdateStack(args: CancelUpdateStackCommandInput, options?: __HttpHandlerOptions): Promise<CancelUpdateStackCommandOutput>;
    cancelUpdateStack(args: CancelUpdateStackCommandInput, cb: (err: any, data?: CancelUpdateStackCommandOutput) => void): void;
    cancelUpdateStack(args: CancelUpdateStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelUpdateStackCommandOutput) => void): void;
    
    continueUpdateRollback(args: ContinueUpdateRollbackCommandInput, options?: __HttpHandlerOptions): Promise<ContinueUpdateRollbackCommandOutput>;
    continueUpdateRollback(args: ContinueUpdateRollbackCommandInput, cb: (err: any, data?: ContinueUpdateRollbackCommandOutput) => void): void;
    continueUpdateRollback(args: ContinueUpdateRollbackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ContinueUpdateRollbackCommandOutput) => void): void;
    
    createChangeSet(args: CreateChangeSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateChangeSetCommandOutput>;
    createChangeSet(args: CreateChangeSetCommandInput, cb: (err: any, data?: CreateChangeSetCommandOutput) => void): void;
    createChangeSet(args: CreateChangeSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateChangeSetCommandOutput) => void): void;
    
    createStack(args: CreateStackCommandInput, options?: __HttpHandlerOptions): Promise<CreateStackCommandOutput>;
    createStack(args: CreateStackCommandInput, cb: (err: any, data?: CreateStackCommandOutput) => void): void;
    createStack(args: CreateStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStackCommandOutput) => void): void;
    
    createStackInstances(args: CreateStackInstancesCommandInput, options?: __HttpHandlerOptions): Promise<CreateStackInstancesCommandOutput>;
    createStackInstances(args: CreateStackInstancesCommandInput, cb: (err: any, data?: CreateStackInstancesCommandOutput) => void): void;
    createStackInstances(args: CreateStackInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStackInstancesCommandOutput) => void): void;
    
    createStackSet(args: CreateStackSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateStackSetCommandOutput>;
    createStackSet(args: CreateStackSetCommandInput, cb: (err: any, data?: CreateStackSetCommandOutput) => void): void;
    createStackSet(args: CreateStackSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStackSetCommandOutput) => void): void;
    
    deactivateType(args: DeactivateTypeCommandInput, options?: __HttpHandlerOptions): Promise<DeactivateTypeCommandOutput>;
    deactivateType(args: DeactivateTypeCommandInput, cb: (err: any, data?: DeactivateTypeCommandOutput) => void): void;
    deactivateType(args: DeactivateTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeactivateTypeCommandOutput) => void): void;
    
    deleteChangeSet(args: DeleteChangeSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChangeSetCommandOutput>;
    deleteChangeSet(args: DeleteChangeSetCommandInput, cb: (err: any, data?: DeleteChangeSetCommandOutput) => void): void;
    deleteChangeSet(args: DeleteChangeSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChangeSetCommandOutput) => void): void;
    
    deleteStack(args: DeleteStackCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStackCommandOutput>;
    deleteStack(args: DeleteStackCommandInput, cb: (err: any, data?: DeleteStackCommandOutput) => void): void;
    deleteStack(args: DeleteStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStackCommandOutput) => void): void;
    
    deleteStackInstances(args: DeleteStackInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStackInstancesCommandOutput>;
    deleteStackInstances(args: DeleteStackInstancesCommandInput, cb: (err: any, data?: DeleteStackInstancesCommandOutput) => void): void;
    deleteStackInstances(args: DeleteStackInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStackInstancesCommandOutput) => void): void;
    
    deleteStackSet(args: DeleteStackSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStackSetCommandOutput>;
    deleteStackSet(args: DeleteStackSetCommandInput, cb: (err: any, data?: DeleteStackSetCommandOutput) => void): void;
    deleteStackSet(args: DeleteStackSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStackSetCommandOutput) => void): void;
    
    deregisterType(args: DeregisterTypeCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterTypeCommandOutput>;
    deregisterType(args: DeregisterTypeCommandInput, cb: (err: any, data?: DeregisterTypeCommandOutput) => void): void;
    deregisterType(args: DeregisterTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterTypeCommandOutput) => void): void;
    
    describeAccountLimits(args: DescribeAccountLimitsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAccountLimitsCommandOutput>;
    describeAccountLimits(args: DescribeAccountLimitsCommandInput, cb: (err: any, data?: DescribeAccountLimitsCommandOutput) => void): void;
    describeAccountLimits(args: DescribeAccountLimitsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAccountLimitsCommandOutput) => void): void;
    
    describeChangeSet(args: DescribeChangeSetCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChangeSetCommandOutput>;
    describeChangeSet(args: DescribeChangeSetCommandInput, cb: (err: any, data?: DescribeChangeSetCommandOutput) => void): void;
    describeChangeSet(args: DescribeChangeSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChangeSetCommandOutput) => void): void;
    
    describeChangeSetHooks(args: DescribeChangeSetHooksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChangeSetHooksCommandOutput>;
    describeChangeSetHooks(args: DescribeChangeSetHooksCommandInput, cb: (err: any, data?: DescribeChangeSetHooksCommandOutput) => void): void;
    describeChangeSetHooks(args: DescribeChangeSetHooksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChangeSetHooksCommandOutput) => void): void;
    
    describePublisher(args: DescribePublisherCommandInput, options?: __HttpHandlerOptions): Promise<DescribePublisherCommandOutput>;
    describePublisher(args: DescribePublisherCommandInput, cb: (err: any, data?: DescribePublisherCommandOutput) => void): void;
    describePublisher(args: DescribePublisherCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePublisherCommandOutput) => void): void;
    
    describeStackDriftDetectionStatus(args: DescribeStackDriftDetectionStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackDriftDetectionStatusCommandOutput>;
    describeStackDriftDetectionStatus(args: DescribeStackDriftDetectionStatusCommandInput, cb: (err: any, data?: DescribeStackDriftDetectionStatusCommandOutput) => void): void;
    describeStackDriftDetectionStatus(args: DescribeStackDriftDetectionStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackDriftDetectionStatusCommandOutput) => void): void;
    
    describeStackEvents(args: DescribeStackEventsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackEventsCommandOutput>;
    describeStackEvents(args: DescribeStackEventsCommandInput, cb: (err: any, data?: DescribeStackEventsCommandOutput) => void): void;
    describeStackEvents(args: DescribeStackEventsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackEventsCommandOutput) => void): void;
    
    describeStackInstance(args: DescribeStackInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackInstanceCommandOutput>;
    describeStackInstance(args: DescribeStackInstanceCommandInput, cb: (err: any, data?: DescribeStackInstanceCommandOutput) => void): void;
    describeStackInstance(args: DescribeStackInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackInstanceCommandOutput) => void): void;
    
    describeStackResource(args: DescribeStackResourceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackResourceCommandOutput>;
    describeStackResource(args: DescribeStackResourceCommandInput, cb: (err: any, data?: DescribeStackResourceCommandOutput) => void): void;
    describeStackResource(args: DescribeStackResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackResourceCommandOutput) => void): void;
    
    describeStackResourceDrifts(args: DescribeStackResourceDriftsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackResourceDriftsCommandOutput>;
    describeStackResourceDrifts(args: DescribeStackResourceDriftsCommandInput, cb: (err: any, data?: DescribeStackResourceDriftsCommandOutput) => void): void;
    describeStackResourceDrifts(args: DescribeStackResourceDriftsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackResourceDriftsCommandOutput) => void): void;
    
    describeStackResources(args: DescribeStackResourcesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackResourcesCommandOutput>;
    describeStackResources(args: DescribeStackResourcesCommandInput, cb: (err: any, data?: DescribeStackResourcesCommandOutput) => void): void;
    describeStackResources(args: DescribeStackResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackResourcesCommandOutput) => void): void;
    
    describeStacks(args: DescribeStacksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStacksCommandOutput>;
    describeStacks(args: DescribeStacksCommandInput, cb: (err: any, data?: DescribeStacksCommandOutput) => void): void;
    describeStacks(args: DescribeStacksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStacksCommandOutput) => void): void;
    
    describeStackSet(args: DescribeStackSetCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackSetCommandOutput>;
    describeStackSet(args: DescribeStackSetCommandInput, cb: (err: any, data?: DescribeStackSetCommandOutput) => void): void;
    describeStackSet(args: DescribeStackSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackSetCommandOutput) => void): void;
    
    describeStackSetOperation(args: DescribeStackSetOperationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStackSetOperationCommandOutput>;
    describeStackSetOperation(args: DescribeStackSetOperationCommandInput, cb: (err: any, data?: DescribeStackSetOperationCommandOutput) => void): void;
    describeStackSetOperation(args: DescribeStackSetOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStackSetOperationCommandOutput) => void): void;
    
    describeType(args: DescribeTypeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTypeCommandOutput>;
    describeType(args: DescribeTypeCommandInput, cb: (err: any, data?: DescribeTypeCommandOutput) => void): void;
    describeType(args: DescribeTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTypeCommandOutput) => void): void;
    
    describeTypeRegistration(args: DescribeTypeRegistrationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTypeRegistrationCommandOutput>;
    describeTypeRegistration(args: DescribeTypeRegistrationCommandInput, cb: (err: any, data?: DescribeTypeRegistrationCommandOutput) => void): void;
    describeTypeRegistration(args: DescribeTypeRegistrationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTypeRegistrationCommandOutput) => void): void;
    
    detectStackDrift(args: DetectStackDriftCommandInput, options?: __HttpHandlerOptions): Promise<DetectStackDriftCommandOutput>;
    detectStackDrift(args: DetectStackDriftCommandInput, cb: (err: any, data?: DetectStackDriftCommandOutput) => void): void;
    detectStackDrift(args: DetectStackDriftCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectStackDriftCommandOutput) => void): void;
    
    detectStackResourceDrift(args: DetectStackResourceDriftCommandInput, options?: __HttpHandlerOptions): Promise<DetectStackResourceDriftCommandOutput>;
    detectStackResourceDrift(args: DetectStackResourceDriftCommandInput, cb: (err: any, data?: DetectStackResourceDriftCommandOutput) => void): void;
    detectStackResourceDrift(args: DetectStackResourceDriftCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectStackResourceDriftCommandOutput) => void): void;
    
    detectStackSetDrift(args: DetectStackSetDriftCommandInput, options?: __HttpHandlerOptions): Promise<DetectStackSetDriftCommandOutput>;
    detectStackSetDrift(args: DetectStackSetDriftCommandInput, cb: (err: any, data?: DetectStackSetDriftCommandOutput) => void): void;
    detectStackSetDrift(args: DetectStackSetDriftCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectStackSetDriftCommandOutput) => void): void;
    
    estimateTemplateCost(args: EstimateTemplateCostCommandInput, options?: __HttpHandlerOptions): Promise<EstimateTemplateCostCommandOutput>;
    estimateTemplateCost(args: EstimateTemplateCostCommandInput, cb: (err: any, data?: EstimateTemplateCostCommandOutput) => void): void;
    estimateTemplateCost(args: EstimateTemplateCostCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EstimateTemplateCostCommandOutput) => void): void;
    
    executeChangeSet(args: ExecuteChangeSetCommandInput, options?: __HttpHandlerOptions): Promise<ExecuteChangeSetCommandOutput>;
    executeChangeSet(args: ExecuteChangeSetCommandInput, cb: (err: any, data?: ExecuteChangeSetCommandOutput) => void): void;
    executeChangeSet(args: ExecuteChangeSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExecuteChangeSetCommandOutput) => void): void;
    
    getStackPolicy(args: GetStackPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetStackPolicyCommandOutput>;
    getStackPolicy(args: GetStackPolicyCommandInput, cb: (err: any, data?: GetStackPolicyCommandOutput) => void): void;
    getStackPolicy(args: GetStackPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetStackPolicyCommandOutput) => void): void;
    
    getTemplate(args: GetTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetTemplateCommandOutput>;
    getTemplate(args: GetTemplateCommandInput, cb: (err: any, data?: GetTemplateCommandOutput) => void): void;
    getTemplate(args: GetTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTemplateCommandOutput) => void): void;
    
    getTemplateSummary(args: GetTemplateSummaryCommandInput, options?: __HttpHandlerOptions): Promise<GetTemplateSummaryCommandOutput>;
    getTemplateSummary(args: GetTemplateSummaryCommandInput, cb: (err: any, data?: GetTemplateSummaryCommandOutput) => void): void;
    getTemplateSummary(args: GetTemplateSummaryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTemplateSummaryCommandOutput) => void): void;
    
    importStacksToStackSet(args: ImportStacksToStackSetCommandInput, options?: __HttpHandlerOptions): Promise<ImportStacksToStackSetCommandOutput>;
    importStacksToStackSet(args: ImportStacksToStackSetCommandInput, cb: (err: any, data?: ImportStacksToStackSetCommandOutput) => void): void;
    importStacksToStackSet(args: ImportStacksToStackSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportStacksToStackSetCommandOutput) => void): void;
    
    listChangeSets(args: ListChangeSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListChangeSetsCommandOutput>;
    listChangeSets(args: ListChangeSetsCommandInput, cb: (err: any, data?: ListChangeSetsCommandOutput) => void): void;
    listChangeSets(args: ListChangeSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChangeSetsCommandOutput) => void): void;
    
    listExports(args: ListExportsCommandInput, options?: __HttpHandlerOptions): Promise<ListExportsCommandOutput>;
    listExports(args: ListExportsCommandInput, cb: (err: any, data?: ListExportsCommandOutput) => void): void;
    listExports(args: ListExportsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExportsCommandOutput) => void): void;
    
    listImports(args: ListImportsCommandInput, options?: __HttpHandlerOptions): Promise<ListImportsCommandOutput>;
    listImports(args: ListImportsCommandInput, cb: (err: any, data?: ListImportsCommandOutput) => void): void;
    listImports(args: ListImportsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListImportsCommandOutput) => void): void;
    
    listStackInstances(args: ListStackInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListStackInstancesCommandOutput>;
    listStackInstances(args: ListStackInstancesCommandInput, cb: (err: any, data?: ListStackInstancesCommandOutput) => void): void;
    listStackInstances(args: ListStackInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackInstancesCommandOutput) => void): void;
    
    listStackResources(args: ListStackResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListStackResourcesCommandOutput>;
    listStackResources(args: ListStackResourcesCommandInput, cb: (err: any, data?: ListStackResourcesCommandOutput) => void): void;
    listStackResources(args: ListStackResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackResourcesCommandOutput) => void): void;
    
    listStacks(args: ListStacksCommandInput, options?: __HttpHandlerOptions): Promise<ListStacksCommandOutput>;
    listStacks(args: ListStacksCommandInput, cb: (err: any, data?: ListStacksCommandOutput) => void): void;
    listStacks(args: ListStacksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStacksCommandOutput) => void): void;
    
    listStackSetOperationResults(args: ListStackSetOperationResultsCommandInput, options?: __HttpHandlerOptions): Promise<ListStackSetOperationResultsCommandOutput>;
    listStackSetOperationResults(args: ListStackSetOperationResultsCommandInput, cb: (err: any, data?: ListStackSetOperationResultsCommandOutput) => void): void;
    listStackSetOperationResults(args: ListStackSetOperationResultsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackSetOperationResultsCommandOutput) => void): void;
    
    listStackSetOperations(args: ListStackSetOperationsCommandInput, options?: __HttpHandlerOptions): Promise<ListStackSetOperationsCommandOutput>;
    listStackSetOperations(args: ListStackSetOperationsCommandInput, cb: (err: any, data?: ListStackSetOperationsCommandOutput) => void): void;
    listStackSetOperations(args: ListStackSetOperationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackSetOperationsCommandOutput) => void): void;
    
    listStackSets(args: ListStackSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListStackSetsCommandOutput>;
    listStackSets(args: ListStackSetsCommandInput, cb: (err: any, data?: ListStackSetsCommandOutput) => void): void;
    listStackSets(args: ListStackSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackSetsCommandOutput) => void): void;
    
    listTypeRegistrations(args: ListTypeRegistrationsCommandInput, options?: __HttpHandlerOptions): Promise<ListTypeRegistrationsCommandOutput>;
    listTypeRegistrations(args: ListTypeRegistrationsCommandInput, cb: (err: any, data?: ListTypeRegistrationsCommandOutput) => void): void;
    listTypeRegistrations(args: ListTypeRegistrationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTypeRegistrationsCommandOutput) => void): void;
    
    listTypes(args: ListTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListTypesCommandOutput>;
    listTypes(args: ListTypesCommandInput, cb: (err: any, data?: ListTypesCommandOutput) => void): void;
    listTypes(args: ListTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTypesCommandOutput) => void): void;
    
    listTypeVersions(args: ListTypeVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListTypeVersionsCommandOutput>;
    listTypeVersions(args: ListTypeVersionsCommandInput, cb: (err: any, data?: ListTypeVersionsCommandOutput) => void): void;
    listTypeVersions(args: ListTypeVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTypeVersionsCommandOutput) => void): void;
    
    publishType(args: PublishTypeCommandInput, options?: __HttpHandlerOptions): Promise<PublishTypeCommandOutput>;
    publishType(args: PublishTypeCommandInput, cb: (err: any, data?: PublishTypeCommandOutput) => void): void;
    publishType(args: PublishTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PublishTypeCommandOutput) => void): void;
    
    recordHandlerProgress(args: RecordHandlerProgressCommandInput, options?: __HttpHandlerOptions): Promise<RecordHandlerProgressCommandOutput>;
    recordHandlerProgress(args: RecordHandlerProgressCommandInput, cb: (err: any, data?: RecordHandlerProgressCommandOutput) => void): void;
    recordHandlerProgress(args: RecordHandlerProgressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RecordHandlerProgressCommandOutput) => void): void;
    
    registerPublisher(args: RegisterPublisherCommandInput, options?: __HttpHandlerOptions): Promise<RegisterPublisherCommandOutput>;
    registerPublisher(args: RegisterPublisherCommandInput, cb: (err: any, data?: RegisterPublisherCommandOutput) => void): void;
    registerPublisher(args: RegisterPublisherCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterPublisherCommandOutput) => void): void;
    
    registerType(args: RegisterTypeCommandInput, options?: __HttpHandlerOptions): Promise<RegisterTypeCommandOutput>;
    registerType(args: RegisterTypeCommandInput, cb: (err: any, data?: RegisterTypeCommandOutput) => void): void;
    registerType(args: RegisterTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterTypeCommandOutput) => void): void;
    
    rollbackStack(args: RollbackStackCommandInput, options?: __HttpHandlerOptions): Promise<RollbackStackCommandOutput>;
    rollbackStack(args: RollbackStackCommandInput, cb: (err: any, data?: RollbackStackCommandOutput) => void): void;
    rollbackStack(args: RollbackStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RollbackStackCommandOutput) => void): void;
    
    setStackPolicy(args: SetStackPolicyCommandInput, options?: __HttpHandlerOptions): Promise<SetStackPolicyCommandOutput>;
    setStackPolicy(args: SetStackPolicyCommandInput, cb: (err: any, data?: SetStackPolicyCommandOutput) => void): void;
    setStackPolicy(args: SetStackPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetStackPolicyCommandOutput) => void): void;
    
    setTypeConfiguration(args: SetTypeConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<SetTypeConfigurationCommandOutput>;
    setTypeConfiguration(args: SetTypeConfigurationCommandInput, cb: (err: any, data?: SetTypeConfigurationCommandOutput) => void): void;
    setTypeConfiguration(args: SetTypeConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetTypeConfigurationCommandOutput) => void): void;
    
    setTypeDefaultVersion(args: SetTypeDefaultVersionCommandInput, options?: __HttpHandlerOptions): Promise<SetTypeDefaultVersionCommandOutput>;
    setTypeDefaultVersion(args: SetTypeDefaultVersionCommandInput, cb: (err: any, data?: SetTypeDefaultVersionCommandOutput) => void): void;
    setTypeDefaultVersion(args: SetTypeDefaultVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetTypeDefaultVersionCommandOutput) => void): void;
    
    signalResource(args: SignalResourceCommandInput, options?: __HttpHandlerOptions): Promise<SignalResourceCommandOutput>;
    signalResource(args: SignalResourceCommandInput, cb: (err: any, data?: SignalResourceCommandOutput) => void): void;
    signalResource(args: SignalResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SignalResourceCommandOutput) => void): void;
    
    stopStackSetOperation(args: StopStackSetOperationCommandInput, options?: __HttpHandlerOptions): Promise<StopStackSetOperationCommandOutput>;
    stopStackSetOperation(args: StopStackSetOperationCommandInput, cb: (err: any, data?: StopStackSetOperationCommandOutput) => void): void;
    stopStackSetOperation(args: StopStackSetOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopStackSetOperationCommandOutput) => void): void;
    
    testType(args: TestTypeCommandInput, options?: __HttpHandlerOptions): Promise<TestTypeCommandOutput>;
    testType(args: TestTypeCommandInput, cb: (err: any, data?: TestTypeCommandOutput) => void): void;
    testType(args: TestTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TestTypeCommandOutput) => void): void;
    
    updateStack(args: UpdateStackCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStackCommandOutput>;
    updateStack(args: UpdateStackCommandInput, cb: (err: any, data?: UpdateStackCommandOutput) => void): void;
    updateStack(args: UpdateStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStackCommandOutput) => void): void;
    
    updateStackInstances(args: UpdateStackInstancesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStackInstancesCommandOutput>;
    updateStackInstances(args: UpdateStackInstancesCommandInput, cb: (err: any, data?: UpdateStackInstancesCommandOutput) => void): void;
    updateStackInstances(args: UpdateStackInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStackInstancesCommandOutput) => void): void;
    
    updateStackSet(args: UpdateStackSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStackSetCommandOutput>;
    updateStackSet(args: UpdateStackSetCommandInput, cb: (err: any, data?: UpdateStackSetCommandOutput) => void): void;
    updateStackSet(args: UpdateStackSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStackSetCommandOutput) => void): void;
    
    updateTerminationProtection(args: UpdateTerminationProtectionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTerminationProtectionCommandOutput>;
    updateTerminationProtection(args: UpdateTerminationProtectionCommandInput, cb: (err: any, data?: UpdateTerminationProtectionCommandOutput) => void): void;
    updateTerminationProtection(args: UpdateTerminationProtectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTerminationProtectionCommandOutput) => void): void;
    
    validateTemplate(args: ValidateTemplateCommandInput, options?: __HttpHandlerOptions): Promise<ValidateTemplateCommandOutput>;
    validateTemplate(args: ValidateTemplateCommandInput, cb: (err: any, data?: ValidateTemplateCommandOutput) => void): void;
    validateTemplate(args: ValidateTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ValidateTemplateCommandOutput) => void): void;
}
