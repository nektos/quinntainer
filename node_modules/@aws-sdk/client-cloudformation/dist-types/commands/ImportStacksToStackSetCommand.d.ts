import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { CloudFormationClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CloudFormationClient";
import { ImportStacksToStackSetInput, ImportStacksToStackSetOutput } from "../models/models_0";
export interface ImportStacksToStackSetCommandInput extends ImportStacksToStackSetInput {
}
export interface ImportStacksToStackSetCommandOutput extends ImportStacksToStackSetOutput, __MetadataBearer {
}
/**
 * <p>Import existing stacks into a new stack sets. Use the stack import operation to import
 *          up to 10 stacks into a new stack set in the same account as the source stack or in a
 *          different administrator account and Region, by specifying the stack ID of the stack you
 *          intend to import.</p>
 *          <note>
 *             <p>
 *                <code>ImportStacksToStackSet</code> is only supported by self-managed
 *             permissions.</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { CloudFormationClient, ImportStacksToStackSetCommand } from "@aws-sdk/client-cloudformation"; // ES Modules import
 * // const { CloudFormationClient, ImportStacksToStackSetCommand } = require("@aws-sdk/client-cloudformation"); // CommonJS import
 * const client = new CloudFormationClient(config);
 * const command = new ImportStacksToStackSetCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link ImportStacksToStackSetCommandInput} for command's `input` shape.
 * @see {@link ImportStacksToStackSetCommandOutput} for command's `response` shape.
 * @see {@link CloudFormationClientResolvedConfig | config} for CloudFormationClient's `config` shape.
 *
 */
export declare class ImportStacksToStackSetCommand extends $Command<ImportStacksToStackSetCommandInput, ImportStacksToStackSetCommandOutput, CloudFormationClientResolvedConfig> {
    readonly input: ImportStacksToStackSetCommandInput;
    constructor(input: ImportStacksToStackSetCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: CloudFormationClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportStacksToStackSetCommandInput, ImportStacksToStackSetCommandOutput>;
    private serialize;
    private deserialize;
}
