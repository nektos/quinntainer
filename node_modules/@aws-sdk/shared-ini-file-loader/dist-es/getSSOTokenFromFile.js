import { __awaiter, __generator } from "tslib";
import { createHash } from "crypto";
import { promises as fsPromises } from "fs";
import { join } from "path";
import { getHomeDir } from "./getHomeDir";
var readFile = fsPromises.readFile;
export var getSSOTokenFromFile = function (ssoStartUrl) { return __awaiter(void 0, void 0, void 0, function () {
    var hasher, cacheName, tokenFile, tokenText;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                hasher = createHash("sha1");
                cacheName = hasher.update(ssoStartUrl).digest("hex");
                tokenFile = join(getHomeDir(), ".aws", "sso", "cache", cacheName + ".json");
                return [4, readFile(tokenFile, "utf8")];
            case 1:
                tokenText = _a.sent();
                return [2, JSON.parse(tokenText)];
        }
    });
}); };
